// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// dBetaBinom_MP
NumericVector dBetaBinom_MP(NumericVector ms, NumericVector ns, double piX, double thetaX, bool LOG, double NecPres);
RcppExport SEXP _MAGE_dBetaBinom_MP(SEXP msSEXP, SEXP nsSEXP, SEXP piXSEXP, SEXP thetaXSEXP, SEXP LOGSEXP, SEXP NecPresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ms(msSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ns(nsSEXP);
    Rcpp::traits::input_parameter< double >::type piX(piXSEXP);
    Rcpp::traits::input_parameter< double >::type thetaX(thetaXSEXP);
    Rcpp::traits::input_parameter< bool >::type LOG(LOGSEXP);
    Rcpp::traits::input_parameter< double >::type NecPres(NecPresSEXP);
    rcpp_result_gen = Rcpp::wrap(dBetaBinom_MP(ms, ns, piX, thetaX, LOG, NecPres));
    return rcpp_result_gen;
END_RCPP
}
// grad_pi_MP
NumericVector grad_pi_MP(NumericVector ms, NumericVector ns, double piX, double thetaX, double NecPres);
RcppExport SEXP _MAGE_grad_pi_MP(SEXP msSEXP, SEXP nsSEXP, SEXP piXSEXP, SEXP thetaXSEXP, SEXP NecPresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ms(msSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ns(nsSEXP);
    Rcpp::traits::input_parameter< double >::type piX(piXSEXP);
    Rcpp::traits::input_parameter< double >::type thetaX(thetaXSEXP);
    Rcpp::traits::input_parameter< double >::type NecPres(NecPresSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_pi_MP(ms, ns, piX, thetaX, NecPres));
    return rcpp_result_gen;
END_RCPP
}
// grad_theta_MP
NumericVector grad_theta_MP(NumericVector ms, NumericVector ns, double piX, double thetaX, double NecPres);
RcppExport SEXP _MAGE_grad_theta_MP(SEXP msSEXP, SEXP nsSEXP, SEXP piXSEXP, SEXP thetaXSEXP, SEXP NecPresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ms(msSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ns(nsSEXP);
    Rcpp::traits::input_parameter< double >::type piX(piXSEXP);
    Rcpp::traits::input_parameter< double >::type thetaX(thetaXSEXP);
    Rcpp::traits::input_parameter< double >::type NecPres(NecPresSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_theta_MP(ms, ns, piX, thetaX, NecPres));
    return rcpp_result_gen;
END_RCPP
}
// dBetaBinom_cpp_old
NumericVector dBetaBinom_cpp_old(NumericVector ms, NumericVector ns, double pi, double theta, bool LOG);
RcppExport SEXP _MAGE_dBetaBinom_cpp_old(SEXP msSEXP, SEXP nsSEXP, SEXP piSEXP, SEXP thetaSEXP, SEXP LOGSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ms(msSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ns(nsSEXP);
    Rcpp::traits::input_parameter< double >::type pi(piSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< bool >::type LOG(LOGSEXP);
    rcpp_result_gen = Rcpp::wrap(dBetaBinom_cpp_old(ms, ns, pi, theta, LOG));
    return rcpp_result_gen;
END_RCPP
}
// grad_pi_old
NumericVector grad_pi_old(NumericVector ms, NumericVector ns, double pi, double theta);
RcppExport SEXP _MAGE_grad_pi_old(SEXP msSEXP, SEXP nsSEXP, SEXP piSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ms(msSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ns(nsSEXP);
    Rcpp::traits::input_parameter< double >::type pi(piSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_pi_old(ms, ns, pi, theta));
    return rcpp_result_gen;
END_RCPP
}
// grad_theta_old
NumericVector grad_theta_old(NumericVector ms, NumericVector ns, double pi, double theta);
RcppExport SEXP _MAGE_grad_theta_old(SEXP msSEXP, SEXP nsSEXP, SEXP piSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ms(msSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ns(nsSEXP);
    Rcpp::traits::input_parameter< double >::type pi(piSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_theta_old(ms, ns, pi, theta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MAGE_dBetaBinom_MP", (DL_FUNC) &_MAGE_dBetaBinom_MP, 6},
    {"_MAGE_grad_pi_MP", (DL_FUNC) &_MAGE_grad_pi_MP, 5},
    {"_MAGE_grad_theta_MP", (DL_FUNC) &_MAGE_grad_theta_MP, 5},
    {"_MAGE_dBetaBinom_cpp_old", (DL_FUNC) &_MAGE_dBetaBinom_cpp_old, 5},
    {"_MAGE_grad_pi_old", (DL_FUNC) &_MAGE_grad_pi_old, 4},
    {"_MAGE_grad_theta_old", (DL_FUNC) &_MAGE_grad_theta_old, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_MAGE(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
