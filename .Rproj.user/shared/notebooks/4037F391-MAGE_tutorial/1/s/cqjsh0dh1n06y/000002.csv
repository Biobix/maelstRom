"0","SE_vec <- c()"
"0","F_vec <- c()"
"0",""
"0","pA_filt <- 0.15 # Loci with a low minor allele frequency are less reliable"
"0","SE_filt <- 0.035 # Loci which return a high sequencing error are suspicious"
"0","NumSamp_filt <- 10 # Loci with a lot of samples are reliable for estimating inbreeding"
"0","MedianCov_filt <- 4 # Loci with low coverage are unreliable"
"0",""
"0","for(n in names(controlList)){"
"0","  MetaEst_res <- MAGE::estimate_parameters(ref_counts = controlList[[n]]$ref_count, "
"0","                  var_counts = controlList[[n]]$var_count)"
"0","  # You can store each locus' Sequencing Error (SE) and inbreeding coefficient (F) estimate "
"0","  # in its dataframe, if you want:"
"0","  controlList[[n]]$est_SE <- MetaEst_res$SE"
"0","  controlList[[n]]$est_inbr <- MetaEst_res$F_inbr"
"0","  controlList[[n]]$allelefreq_0 <- MetaEst_res$allelefreq"
"0","  # Only take a locus' estimates into account if the locus is high-quality:"
"0","  if (!(MetaEst_res$allelefreq <= pA_filt || MetaEst_res$allelefreq >= (1 - pA_filt) "
"0","        # allelefreq returns allele frequency of the ref-allele,"
"0","        # so just in case this is the minor allele on population level "
"0","        # (even though it is the most expresse one across all RNAseq data),"
"0","        # we perform the filtering like this"
"0","      || MetaEst_res$SE > SE_filt) & nrow(controlList[[n]])>=NumSamp_filt & "
"0","      median(controlList[[n]]$ref_count + controlList[[n]]$var_count) >= MedianCov_filt) {"
"0","      SE_vec <- c(SE_vec, MetaEst_res$SE)"
"0","      F_vec <- c(F_vec, MetaEst_res$F_inbr)"
"0","  }"
"0","}"
"0",""
"0","SEmedian <- median(SE_vec)"
"0","Fmedian <- median(F_vec)"
"0",""
"0","print(c(SEmedian, Fmedian))"
"1","[1]"
"1","  0.0033650786"
"1"," -0.0004878278"
"1","
"
