"0","NC <- 1 # Number of Cores"
"0","NS <- length(controlList) "
"0","spl <- c(0, cumsum(rep(floor(NS/NC),NC)+c(rep(1,NS-floor(NS/NC)*NC),"
"0","         rep(0,NC-NS+floor(NS/NC)*NC)))) # Helps in splitting input data"
"0","ParCTRL <- vector(mode = ""list"", length=NC)"
"0","for(i in 1:NC){ # Put the splitted input data into a list for parallellisation"
"0","  ParCTRL[[i]] <- controlList[(spl[i]+1):(spl[i+1])]"
"0","}"
"0",""
"0","BetaBinomGenotyping <- function(data){"
"0","  positions <- names(data)"
"0","  results <- data.frame()"
"0","  for (z in positions) {"
"0","    MAGEres <- MAGE::EMfit_betabinom_robust(data_counts = data[[z]], "
"0","                                            SE = SEmedian, inbr = Fmedian)"
"0","    data[[z]] <- MAGEres$data_hash"
"0","    # median_AB also calculates a robust median AB,"
"0","    # besides the AB as determined during EMfit_betabinom_robust's fitting procedure."
"0","    # This can be used as additional filter when detecting significant AB:"
"0","    med_AB <- MAGE::median_AB(data[[z]]$ref_count, data[[z]]$var_count, "
"0","                               data[[z]]$allelefreq[1], Fmedian) "
"0","    res_loc <- data.frame(""position"" = z, ""probshift"" = as.numeric(MAGEres$AB), "
"0","      ""LRT"" = as.numeric(MAGEres$AB_lrt), ""p"" = as.numeric(MAGEres$AB_p),"
"0","      ""quality"" = MAGEres$quality, ""allele.frequency"" = data[[z]]$allelefreq[1], "
"0","      ""reference"" = data[[z]]$ref[1], ""variant"" = data[[z]]$var[1], "
"0","      ""est_SE"" = data[[z]]$est_SE[1], ""coverage"" = data[[z]]$coverage[1],"
"0","      ""nr_samples"" = nrow(data[[z]]), ""median_AB"" = med_AB, "
"0","      ""rho_rr"" = MAGEres$rho_rr, ""rho_rv"" = MAGEres$rho_rv, ""rho_vv"" = MAGEres$rho_vv, "
"0","      ""theta_hom"" = MAGEres$theta_hom, ""theta_het"" = MAGEres$theta_het,"
"0","      ""theta_hom_NoShift"" = MAGEres$theta_hom_NoShift, "
"0","      ""theta_het_NoShift"" = MAGEres$theta_het_NoShift, stringsAsFactors = FALSE)"
"0","    results <- rbind(results, res_loc) # results; one position per line"
"0","  }"
"0","  results <- MAGE::HWE_chisquared(data = data, Fmedian, results = results)"
"0","  results$Chi2PVAL[is.na(results$Chi2PVAL)] <- "
"0","  results$Chi2STAT[is.na(results$Chi2STAT)] <- -1"
"0","  return(list(data, results))"
"0","}"
"0",""
"0","cl <- parallel::makeCluster(getOption(""cl.cores"", NC))"
"0","parallel::clusterExport(cl, c(""Fmedian"", ""SEmedian""))"
"0","GenoFinData <- parallel::parLapply(cl, X = ParCTRL, fun = BetaBinomGenotyping)"
"0","parallel::stopCluster(cl)"
"0",""
"0","ParCTRL <- lapply(GenoFinData, `[[`, 1)"
"0","controlList <- do.call(c, lapply(GenoFinData, `[[`, 1))"
"0","Geno_AB_res <- do.call(""rbind"", lapply(GenoFinData, `[[`, 2))"
