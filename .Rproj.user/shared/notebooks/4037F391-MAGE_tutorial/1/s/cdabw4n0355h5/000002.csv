"0",""
"0","cis_eqtl_res <- data.frame()"
"0",""
"0","for(SNP in names(controlList)){"
"0","  "
"0","  lrt_results <- MAGE::lrt_eqtl_BetaBinom_DistRob(data_counts = controlList[[SNP]], SE = SEmedian, inbr = Fmedian)"
"0","  "
"0","  controlList[[SNP]] <- lrt_results$data_hash"
"0","  # median_eqtl calculates a robust median heterozygous peak shift, an additional optional filter criterion when searching for significant cis-eqtls,"
"0","  # besides the shift as determined during lrt_eqtl_BetaBinom_DistRob's fitting procedure:"
"0","  med_ase <- MAGE::median_eqtl(controlList[[SNP]]$ref_count, controlList[[SNP]]$var_count, controlList[[SNP]]$allelefreq[1], Fmedian) "
"0","  res_SNP <- data.frame(""position"" = SNP, ""probshift"" = as.numeric(lrt_results$AE), ""LRT"" = as.numeric(lrt_results$AE_lrt), ""p"" = as.numeric(lrt_results$AE_p),"
"0","                        ""quality"" = lrt_results$quality, ""allele.frequency"" = controlList[[SNP]]$allelefreq[1], ""reference"" = controlList[[SNP]]$ref[1],"
"0","                        ""variant"" = controlList[[SNP]]$var[1], ""est_SE"" = controlList[[SNP]]$est_SE[1], ""coverage"" = controlList[[SNP]]$coverage[1], "
"0","                        ""nr_samples"" = nrow(controlList[[SNP]]), ""median_ASE"" = med_ase, ""rho_rr"" = lrt_results$rho_rr, ""rho_rv"" = lrt_results$rho_rv,"
"0","                        ""rho_vv"" = lrt_results$rho_vv, ""theta_hom_H1"" = lrt_results$theta_hom_H1, ""theta_het_H1"" = lrt_results$theta_het_H1, "
"0","                        ""theta_hom_H0"" = lrt_results$theta_hom_H0, ""theta_het_H0"" = lrt_results$theta_het_H0, stringsAsFactors = FALSE)"
"0","  cis_eqtl_res <- rbind(cis_eqtl_res, res_SNP) # results; one position per line"
"0","    "
"0","}"
"2","memory limit reached in dBetaBinom
"
"2","memory limit reached in dBetaBinom
"
"2","memory limit reached in dBetaBinom
"
"2","memory limit reached in dBetaBinom
"
"2","memory limit reached in dBetaBinom
"
"2","memory limit reached in dBetaBinom
"
"0","cis_eqtl_res <- suppressWarnings(MAGE::HWE_chisquared(cis_eqtl_res, Fmedian, controlList))"
"0","cis_eqtl_res$Chi2PVAL[is.na(cis_eqtl_res$Chi2PVAL)] <- cis_eqtl_res$Chi2STAT[is.na(cis_eqtl_res$Chi2STAT)] <- -1"
"0",""
