"0",""
"0","# Perform filtering using symmetry_gof()"
"0","# Notice we use allelefreq_0 as input in this function, which is the allele frequency as estimated by an UNSHIFTED fit we did towards the beginning of this vignette,"
"0","# which is what symmetry_GOF assumes as well so it's only fitting."
"0","# We also enforce that this allelefreq_0 can not be more extreme than 0.15 or 0.85, because detecting imprinting would be very hard otherwise."
"0","ImprData <- controlList"
"0","for(SNP in names(controlList)){"
"0","  if (ImprData[[SNP]]$allelefreq_0[1] <= 0.15 || ImprData[[SNP]]$allelefreq_0[1] >= (1 - 0.15)) {"
"0","    ImprData[[SNP]] <- NULL"
"0","  } else {"
"0","    ImprData[[SNP]]$sym <- MAGE::symmetry_gof(ImprData[[SNP]]$ref_count, ImprData[[SNP]]$var_count, ImprData[[SNP]]$allelefreq_0[1])"
"0","    if (ImprData[[SNP]]$sym[1] <= 0.05) {"
"0","      ImprData[[SNP]] <- NULL"
"0","    }"
"0","  }"
"0","}"
"0",""
"0",""
"0","# Detect imprinted control loci"
"0","impr_res <- data.frame()"
"0","for(SNP in names(ImprData)){"
"0","  i_results <- MAGE::lrt_i(ImprData[[SNP]]$ref_count, ImprData[[SNP]]$var_count, allelefreq = ImprData[[SNP]]$allelefreq_0[1], SE = SEmedian, inbr = Fmedian)"
"0","  # An additional robustified ""median imprinting"" across samples to be used as possible additional filter criterion:"
"0","  med_imp <- MAGE::median_imprinting(ImprData[[SNP]]$ref_count, ImprData[[SNP]]$var_count, allelefreq = ImprData[[SNP]]$allelefreq_0[1], inbr = Fmedian)"
"0","  results_z <- data.frame(""position"" = ImprData[[SNP]]$SNP_id[1], ""LRT"" = i_results$LRT, ""p"" = i_results$p_value, ""estimated.i"" = i_results$est_i,"
"0","                          ""allele.frequency"" = ImprData[[SNP]]$allelefreq_0[1], ""reference"" = ImprData[[SNP]]$ref[1], ""variant"" = ImprData[[SNP]]$var[1], "
"0","                          ""med_cov"" = ImprData[[SNP]]$coverage[1], ""nr_samples"" = nrow(ImprData[[SNP]]), ""GOF"" = i_results$GOF_likelihood, "
"0","                          ""symmetry"" = ImprData[[SNP]]$sym[1], ""med_impr"" = med_imp, stringsAsFactors = FALSE)"
"0","  impr_res <- rbind(impr_res, results_z)"
"0","}"
"0","# Retain significantly imprinted loci (5% FDR) utilizing some additional filters, amongst which a custom Goodness-Of-Fit which more or less corresponds to"
"0","# a locus' likelihood of the imprinted model * coverage; 0.8 is a good cutoff. Other filter criteria are imprinting (0.6) and median imprinting (0.8)"
"0","impr_res_FIN <- MAGE::final_filter(data_hash=NULL, impr_res, results_wd=NULL, gof_filt = 0.8, med_impr_filt = 0.8, i_filt = 0.6, file_all = FALSE, "
"0","                                   file_impr = FALSE, file_all_counts = FALSE, file_impr_counts = FALSE)"
"0",""
"0",""
"0","# From among actually imprinted loci, detect differential expression in tumor data"
"0","pos_impr <- as.character(impr_res_FIN$position)"
"0","p_DI_df <- impr_res_FIN"
"0","p_DI_df$DI_pval <- 1"
"0","for(SNP in pos_impr){"
"0","  CData <- controlList[[SNP]]"
"0","  TData <- caseList[[SNP]]"
"0","  p_DI <- MAGE::binomial_logistic(CData$ref_count, CData$var_count, TData$ref_count, TData$var_count)$p.value"
"0","  p_DI_df$DI_pval[p_DI_df$position == SNP] <- p_DI"
"0","}"
"0",""
"0",""
