build-last-errors="[{\"type\":1,\"path\":\"C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/multiprecision/detail/standalone_config.hpp\",\"line\":36,\"column\":7,\"message\":\"#warning &quot;The minimum language standard to use Boost.Math will be C++14 starting in July 2023 (Boost 1.82 release)&quot; [-Wcpp]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/multiprecision/mpfr.hpp\",\"line\":1,\"column\":1,\"message\":\"#warning &quot;The minimum language standard to use Boost.Math will be C++14 starting in July 2023 (Boost 1.82 release)&quot; [-Wcpp]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/multiprecision/detail/standalone_config.hpp\",\"line\":36,\"column\":7,\"message\":\"#warning &quot;The minimum language standard to use Boost.Math will be C++14 starting in July 2023 (Boost 1.82 release)&quot; [-Wcpp]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/multiprecision/mpfr.hpp\",\"line\":1,\"column\":1,\"message\":\"#warning &quot;The minimum language standard to use Boost.Math will be C++14 starting in July 2023 (Boost 1.82 release)&quot; [-Wcpp]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/OptTestX.cpp\",\"line\":105,\"column\":15,\"message\":\"suggest parentheses around comparison in operand of &#x27;|&#x27; [-Wparentheses]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/OptTestX.cpp\",\"line\":126,\"column\":16,\"message\":\"suggest parentheses around comparison in operand of &#x27;|&#x27; [-Wparentheses]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/OptTestX.cpp\",\"line\":329,\"column\":16,\"message\":\"suggest parentheses around comparison in operand of &#x27;|&#x27; [-Wparentheses]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/OptTestX.cpp\",\"line\":333,\"column\":30,\"message\":\"suggest parentheses around comparison in operand of &#x27;&amp;&#x27; [-Wparentheses]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/OptTestX.cpp\",\"line\":346,\"column\":35,\"message\":\"suggest parentheses around comparison in operand of &#x27;&amp;&#x27; [-Wparentheses]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/OptTestX.cpp\",\"line\":347,\"column\":14,\"message\":\"suggest parentheses around comparison in operand of &#x27;|&#x27; [-Wparentheses]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/OptTestX.cpp\",\"line\":348,\"column\":56,\"message\":\"suggest parentheses around comparison in operand of &#x27;&amp;&#x27; [-Wparentheses]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/OptTestX.cpp\",\"line\":348,\"column\":116,\"message\":\"suggest parentheses around comparison in operand of &#x27;&amp;&#x27; [-Wparentheses]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/OptTestX.cpp\",\"line\":482,\"column\":16,\"message\":\"suggest parentheses around comparison in operand of &#x27;|&#x27; [-Wparentheses]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/OptTestX.cpp\",\"line\":495,\"column\":30,\"message\":\"suggest parentheses around comparison in operand of &#x27;&amp;&#x27; [-Wparentheses]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/OptTestX.cpp\",\"line\":512,\"column\":32,\"message\":\"suggest parentheses around comparison in operand of &#x27;&amp;&#x27; [-Wparentheses]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/OptTestX.cpp\",\"line\":512,\"column\":86,\"message\":\"suggest parentheses around comparison in operand of &#x27;&amp;&#x27; [-Wparentheses]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/OptTestX.cpp\",\"line\":513,\"column\":21,\"message\":\"suggest parentheses around comparison in operand of &#x27;&amp;&#x27; [-Wparentheses]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/OptTestX.cpp\",\"line\":514,\"column\":45,\"message\":\"suggest parentheses around comparison in operand of &#x27;&amp;&#x27; [-Wparentheses]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/OptTestX.cpp\",\"line\":514,\"column\":152,\"message\":\"suggest parentheses around comparison in operand of &#x27;&amp;&#x27; [-Wparentheses]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/OptTestX.cpp\",\"line\":1283,\"column\":14,\"message\":\"suggest parentheses around comparison in operand of &#x27;|&#x27; [-Wparentheses]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/OptTestX.cpp\",\"line\":1287,\"column\":28,\"message\":\"suggest parentheses around comparison in operand of &#x27;&amp;&#x27; [-Wparentheses]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/OptTestX.cpp\",\"line\":1300,\"column\":33,\"message\":\"suggest parentheses around comparison in operand of &#x27;&amp;&#x27; [-Wparentheses]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/OptTestX.cpp\",\"line\":1301,\"column\":25,\"message\":\"suggest parentheses around comparison in operand of &#x27;|&#x27; [-Wparentheses]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/OptTestX.cpp\",\"line\":1302,\"column\":54,\"message\":\"suggest parentheses around comparison in operand of &#x27;&amp;&#x27; [-Wparentheses]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/OptTestX.cpp\",\"line\":1302,\"column\":114,\"message\":\"suggest parentheses around comparison in operand of &#x27;&amp;&#x27; [-Wparentheses]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/OptTestX.cpp\",\"line\":1432,\"column\":28,\"message\":\"suggest parentheses around comparison in operand of &#x27;&amp;&#x27; [-Wparentheses]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/math/tools/config.hpp\",\"line\":23,\"column\":6,\"message\":\"#warning &quot;The minimum language standard to use Boost.Math will be C++14 starting in July 2023 (Boost 1.82 release)&quot; [-Wcpp]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":16,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":27,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":32,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":60,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":65,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":83,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":96,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":101,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":125,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":133,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":124,\"column\":10,\"message\":\"unused variable &#x27;filler&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":200,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":206,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":219,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":257,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":262,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":306,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":320,\"column\":23,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":342,\"column\":27,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":352,\"column\":29,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":388,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;int&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":396,\"column\":25,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;int&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":409,\"column\":25,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;int&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":422,\"column\":25,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;int&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":435,\"column\":25,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;int&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":554,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":575,\"column\":24,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;int&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":598,\"column\":25,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":682,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":704,\"column\":24,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;int&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":727,\"column\":25,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":765,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":787,\"column\":24,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;int&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":810,\"column\":25,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":846,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":868,\"column\":24,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;int&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":891,\"column\":25,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":923,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":945,\"column\":24,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;int&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":968,\"column\":25,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1002,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1024,\"column\":24,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;int&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1047,\"column\":25,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1085,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1107,\"column\":24,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;int&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1130,\"column\":25,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1171,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1193,\"column\":24,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;int&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1216,\"column\":25,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1255,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1277,\"column\":24,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;int&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1300,\"column\":25,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1353,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1375,\"column\":24,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;int&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1398,\"column\":25,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1433,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1455,\"column\":24,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;int&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1478,\"column\":25,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1513,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1535,\"column\":24,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;int&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1558,\"column\":25,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1596,\"column\":21,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1617,\"column\":24,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;int&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"~/MAGEgenotyper/maelstRom/src/TumPurFuns.cpp\",\"line\":1640,\"column\":25,\"message\":\"comparison of integer expressions of different signedness: &#x27;int&#x27; and &#x27;std::vector&lt;double&gt;::size_type&#x27; {aka &#x27;long long unsigned int&#x27;} [-Wsign-compare]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true},{\"type\":1,\"path\":\"C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/math/special_functions/detail/ibeta_inverse.hpp\",\"line\":29,\"column\":15,\"message\":\"unused variable &#x27;x_extrema&#x27; [-Wunused-variable]\",\"log_path\":\"\",\"log_line\":-1,\"show_error_list\":true}]"
build-last-errors-base-dir="~/MAGEgenotyper/maelstRom/"
build-last-outputs="[{\"type\":0,\"output\":\"==> Rcpp::compileAttributes()\\n\\n\"},{\"type\":1,\"output\":\"* Updated R/RcppExports.R\\r\\n\"},{\"type\":1,\"output\":\"\\n\"},{\"type\":0,\"output\":\"==> Rcmd.exe INSTALL --preclean --no-multiarch --with-keep.source maelstRom\\n\\n\"},{\"type\":1,\"output\":\"* installing to library 'C:/Users/Cedric/AppData/Local/R/win-library/4.3'\\r\\n\"},{\"type\":1,\"output\":\"* installing *source* package 'maelstRom' ...\\r\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** using staged installation\\r\\n\"},{\"type\":1,\"output\":\"\\r\\n\"},{\"type\":1,\"output\":\"   **********************************************\\r\\n\"},{\"type\":2,\"output\":\"   WARNING: this package has a configure script\\r\\n\"},{\"type\":1,\"output\":\"         It probably needs manual configuration\\r\\n\"},{\"type\":1,\"output\":\"   **********************************************\\r\\n\"},{\"type\":1,\"output\":\"\\r\\n\"},{\"type\":1,\"output\":\"\\r\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** libs\\r\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"using C++ compiler: 'G__~1.EXE (GCC) 12.3.0'\\r\\n\"},{\"type\":1,\"output\":\"using C++11\\r\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"g++  -std=gnu++11 -I\\\"C:/PROGRA~1/R/R-43~1.3/include\\\" -DNDEBUG -I/include -IC:\\\\Users\\\\Cedric\\\\Documents\\\\R\\\\win-library\\\\4.0\\\\local323/include -I../inst/include -I. -I'C:/Users/Cedric/AppData/Local/R/win-library/4.3/Rcpp/include' -I'C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include' -I'C:/Users/Cedric/AppData/Local/R/win-library/4.3/RcppGSL/include'   -I\\\"C:/RBuildTools/4.3/x86_64-w64-mingw32.static.posix/include\\\"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c BetaBinomFuns.cpp -o BetaBinomFuns.o\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"In file included from C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/multiprecision/mpfr.hpp:9,\\n\"},{\"type\":1,\"output\":\"                 from BetaBinomFuns.cpp:6:\\n\"},{\"type\":1,\"output\":\"C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/multiprecision/detail/standalone_config.hpp:36:7: warning: #warning \\\"The minimum language standard to use Boost.Math will be C++14 starting in July 2023 (Boost 1.82 release)\\\" [-Wcpp]\\n\"},{\"type\":1,\"output\":\"   36 |  #    warning \\\"The minimum language standard to use Boost.Math will be C++14 starting in July 2023 (Boost 1.82 release)\\\"\\n\"},{\"type\":1,\"output\":\"      |       ^~~~~~~\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"In file included from C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/math/cstdfloat/cstdfloat_types.hpp:17,\\n\"},{\"type\":1,\"output\":\"                 from C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/cstdfloat.hpp:18,\\n\"},{\"type\":1,\"output\":\"                 from C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/multiprecision/detail/float128_functions.hpp:15,\\n\"},{\"type\":1,\"output\":\"                 from C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/multiprecision/detail/fpclassify.hpp:13,\\n\"},{\"type\":1,\"output\":\"                 from C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/multiprecision/detail/default_ops.hpp:15,\\n\"},{\"type\":1,\"output\":\"                 from C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/multiprecision/detail/generic_interconvert.hpp:12,\\n\"},{\"type\":1,\"output\":\"                 from C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/multiprecision/number.hpp:12,\\n\"},{\"type\":1,\"output\":\"                 from C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/multiprecision/mpfr.hpp:10:\\n\"},{\"type\":1,\"output\":\"C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/math/tools/config.hpp:23:6: warning: #warning \\\"The minimum language standard to use Boost.Math will be C++14 starting in July 2023 (Boost 1.82 release)\\\" [-Wcpp]\\n\"},{\"type\":1,\"output\":\"   23 | #    warning \\\"The minimum language standard to use Boost.Math will be C++14 starting in July 2023 (Boost 1.82 release)\\\"\\n\"},{\"type\":1,\"output\":\"      |      ^~~~~~~\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"g++  -std=gnu++11 -I\\\"C:/PROGRA~1/R/R-43~1.3/include\\\" -DNDEBUG -I/include -IC:\\\\Users\\\\Cedric\\\\Documents\\\\R\\\\win-library\\\\4.0\\\\local323/include -I../inst/include -I. -I'C:/Users/Cedric/AppData/Local/R/win-library/4.3/Rcpp/include' -I'C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include' -I'C:/Users/Cedric/AppData/Local/R/win-library/4.3/RcppGSL/include'   -I\\\"C:/RBuildTools/4.3/x86_64-w64-mingw32.static.posix/include\\\"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c OptTest.cpp -o OptTest.o\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"g++  -std=gnu++11 -I\\\"C:/PROGRA~1/R/R-43~1.3/include\\\" -DNDEBUG -I/include -IC:\\\\Users\\\\Cedric\\\\Documents\\\\R\\\\win-library\\\\4.0\\\\local323/include -I../inst/include -I. -I'C:/Users/Cedric/AppData/Local/R/win-library/4.3/Rcpp/include' -I'C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include' -I'C:/Users/Cedric/AppData/Local/R/win-library/4.3/RcppGSL/include'   -I\\\"C:/RBuildTools/4.3/x86_64-w64-mingw32.static.posix/include\\\"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c OptTestX.cpp -o OptTestX.o\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"In file included from C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/multiprecision/mpfr.hpp:9,\\n\"},{\"type\":1,\"output\":\"                 from OptTestX.cpp:11:\\n\"},{\"type\":1,\"output\":\"C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/multiprecision/detail/standalone_config.hpp:36:7: warning: #warning \\\"The minimum language standard to use Boost.Math will be C++14 starting in July 2023 (Boost 1.82 release)\\\" [-Wcpp]\\n\"},{\"type\":1,\"output\":\"   36 |  #    warning \\\"The minimum language standard to use Boost.Math will be C++14 starting in July 2023 (Boost 1.82 release)\\\"\\n\"},{\"type\":1,\"output\":\"      |       ^~~~~~~\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"In file included from C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/math/cstdfloat/cstdfloat_types.hpp:17,\\n\"},{\"type\":1,\"output\":\"                 from C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/cstdfloat.hpp:18,\\n\"},{\"type\":1,\"output\":\"                 from C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/multiprecision/detail/float128_functions.hpp:15,\\n\"},{\"type\":1,\"output\":\"                 from C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/multiprecision/detail/fpclassify.hpp:13,\\n\"},{\"type\":1,\"output\":\"                 from C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/multiprecision/detail/default_ops.hpp:15,\\n\"},{\"type\":1,\"output\":\"                 from C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/multiprecision/detail/generic_interconvert.hpp:12,\\n\"},{\"type\":1,\"output\":\"                 from C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/multiprecision/number.hpp:12,\\n\"},{\"type\":1,\"output\":\"                 from C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/multiprecision/mpfr.hpp:10:\\n\"},{\"type\":1,\"output\":\"C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/math/tools/config.hpp:23:6: warning: #warning \\\"The minimum language standard to use Boost.Math will be C++14 starting in July 2023 (Boost 1.82 release)\\\" [-Wcpp]\\n\"},{\"type\":1,\"output\":\"   23 | #    warning \\\"The minimum language standard to use Boost.Math will be C++14 starting in July 2023 (Boost 1.82 release)\\\"\\n\"},{\"type\":1,\"output\":\"      |      ^~~~~~~\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"OptTestX.cpp: In function 'double dBetaBin_cppi(double, double, double, double, bool, int, int)':\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp:105:15: warning: suggest parentheses around comparison in operand of '|' [-Wparentheses]\\n\"},{\"type\":1,\"output\":\"  105 |       if(Hlp2 == -2147483648 | Hlp2 == 2147483647){\\n\"},{\"type\":1,\"output\":\"      |          ~~~~~^~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp:126:16: warning: suggest parentheses around comparison in operand of '|' [-Wparentheses]\\n\"},{\"type\":1,\"output\":\"  126 |         if(Hlp == -2147483648 | Hlp == 2147483647){\\n\"},{\"type\":1,\"output\":\"      |            ~~~~^~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp: In function 'double GradPi_cppi(double, double, double, double, int, int)':\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp:329:16: warning: suggest parentheses around comparison in operand of '|' [-Wparentheses]\\n\"},{\"type\":1,\"output\":\"  329 |         if(Hlp == 2147483647 | Hlp == -2147483648){\\n\"},{\"type\":1,\"output\":\"      |            ~~~~^~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp:333:30: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]\\n\"},{\"type\":1,\"output\":\"  333 |         } else if((PI/THETA) < 1e-100 & ((1-PI)/THETA) < 1e-100){\\n\"},{\"type\":1,\"output\":\"      |                   ~~~~~~~~~~~^~~~~~~~\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp:346:35: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]\\n\"},{\"type\":1,\"output\":\"  346 |         } else if( (M-1)*THETA/PI < 0.01 & (N-M-1)*THETA/(1-PI) < 0.01 &\\n\"},{\"type\":1,\"output\":\"      |                    ~~~~~~~~~~~~~~~^~~~~~\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp:347:14: warning: suggest parentheses around comparison in operand of '|' [-Wparentheses]\\n\"},{\"type\":1,\"output\":\"  347 |           (M < 1e12 | PI*N < 1e12) & /* Only if these are both of a similar and large order of magnitude can catastrophic cancellation occur. */\\n\"},{\"type\":1,\"output\":\"      |            ~~^~~~~~\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp:348:56: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]\\n\"},{\"type\":1,\"output\":\"  348 |           fabs((pow(THETA, 4)*pow(M-1, 5)))/pow(PI, 4) < 1e-7 & fabs((pow(THETA, 4)*pow(N-M-1, 5)))/pow((1-PI), 4) < 1e-7 ){\\n\"},{\"type\":1,\"output\":\"      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp:348:116: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]\\n\"},{\"type\":1,\"output\":\"  348 |           fabs((pow(THETA, 4)*pow(M-1, 5)))/pow(PI, 4) < 1e-7 & fabs((pow(THETA, 4)*pow(N-M-1, 5)))/pow((1-PI), 4) < 1e-7 ){\\n\"},{\"type\":1,\"output\":\"      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp: In function 'double GradTheta_cppi(double, double, double, double, int, int)':\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp:482:16: warning: suggest parentheses around comparison in operand of '|' [-Wparentheses]\\n\"},{\"type\":1,\"output\":\"  482 |         if(Hlp == 2147483647 | Hlp == -2147483648){ /* Because of an Inf - Inf, I presume... so VERY small THETA */\\n\"},{\"type\":1,\"output\":\"      |            ~~~~^~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp:495:30: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]\\n\"},{\"type\":1,\"output\":\"  495 |         } else if((PI/THETA) < 1e-100 & ((1-PI)/THETA) < 1e-100){\\n\"},{\"type\":1,\"output\":\"      |                   ~~~~~~~~~~~^~~~~~~~\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp:512:32: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]\\n\"},{\"type\":1,\"output\":\"  512 |         } else if( (N-1)*THETA < 0.01 & (M-1)*THETA/PI < 0.01 & (N-M-1)*THETA/(1-PI) < 0.01 &\\n\"},{\"type\":1,\"output\":\"      |                    ~~~~~~~~~~~~^~~~~~\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp:512:86: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]\\n\"},{\"type\":1,\"output\":\"  512 |         } else if( (N-1)*THETA < 0.01 & (M-1)*THETA/PI < 0.01 & (N-M-1)*THETA/(1-PI) < 0.01 &\\n\"},{\"type\":1,\"output\":\"      |                                                                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp:513:21: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]\\n\"},{\"type\":1,\"output\":\"  513 |           N*(N-1)/2 < 1e12 &\\n\"},{\"type\":1,\"output\":\"      |           ~~~~~~~~~~^~~~~~\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp:514:45: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]\\n\"},{\"type\":1,\"output\":\"  514 |           fabs((pow(THETA, 3)*pow(N-1, 5))) < 1e-7 & fabs((pow(THETA, 3)*pow(M-1, 5)))/pow(PI, 4) + fabs((pow(THETA, 3)*pow(N-M-1, 5)))/pow((1-PI), 4) < 1e-7 ){\\n\"},{\"type\":1,\"output\":\"      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp:514:152: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]\\n\"},{\"type\":1,\"output\":\"  514 |           fabs((pow(THETA, 3)*pow(N-1, 5))) < 1e-7 & fabs((pow(THETA, 3)*pow(M-1, 5)))/pow(PI, 4) + fabs((pow(THETA, 3)*pow(N-M-1, 5)))/pow((1-PI), 4) < 1e-7 ){\\n\"},{\"type\":1,\"output\":\"      |                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"OptTestX.cpp: In function 'double GradPiPi_cppi(double, double, double, double, int, int)':\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp:1283:14: warning: suggest parentheses around comparison in operand of '|' [-Wparentheses]\\n\"},{\"type\":1,\"output\":\" 1283 |       if(Hlp == 2147483647 | Hlp == -2147483648){\\n\"},{\"type\":1,\"output\":\"      |          ~~~~^~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp:1287:28: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]\\n\"},{\"type\":1,\"output\":\" 1287 |       } else if((PI/THETA) < 1e-100 & ((1-PI)/THETA) < 1e-100){\\n\"},{\"type\":1,\"output\":\"      |                 ~~~~~~~~~~~^~~~~~~~\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp:1300:33: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]\\n\"},{\"type\":1,\"output\":\" 1300 |       } else if( (M-1)*THETA/PI < 0.01 & (N-M-1)*THETA/(1-PI) < 0.01 &\\n\"},{\"type\":1,\"output\":\"      |                  ~~~~~~~~~~~~~~~^~~~~~\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp:1301:25: warning: suggest parentheses around comparison in operand of '|' [-Wparentheses]\\n\"},{\"type\":1,\"output\":\" 1301 |         (pow(PI, 2)*N+M < 1e12 | 2*PI*M < 1e12) & /* Only if these are both of a similar and large order of magnitude can catastrophic cancellation occur. */\\n\"},{\"type\":1,\"output\":\"      |          ~~~~~~~~~~~~~~~^~~~~~\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp:1302:54: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]\\n\"},{\"type\":1,\"output\":\" 1302 |         fabs((pow(THETA, 4)*pow(M-1, 5)))/pow(PI, 4) < 1e-7 & fabs((pow(THETA, 4)*pow(N-M-1, 5)))/pow((1-PI), 4) < 1e-7 ){\\n\"},{\"type\":1,\"output\":\"      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp:1302:114: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]\\n\"},{\"type\":1,\"output\":\" 1302 |         fabs((pow(THETA, 4)*pow(M-1, 5)))/pow(PI, 4) < 1e-7 & fabs((pow(THETA, 4)*pow(N-M-1, 5)))/pow((1-PI), 4) < 1e-7 ){\\n\"},{\"type\":1,\"output\":\"      |                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp: In function 'double GradPiTheta_cppi(double, double, double, double, int, int)':\\n\"},{\"type\":1,\"output\":\"OptTestX.cpp:1432:28: warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]\\n\"},{\"type\":1,\"output\":\" 1432 |       } else if((PI/THETA) < 1e-100 & ((1-PI)/THETA) < 1e-100){\\n\"},{\"type\":1,\"output\":\"      |                 ~~~~~~~~~~~^~~~~~~~\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"g++  -std=gnu++11 -I\\\"C:/PROGRA~1/R/R-43~1.3/include\\\" -DNDEBUG -I/include -IC:\\\\Users\\\\Cedric\\\\Documents\\\\R\\\\win-library\\\\4.0\\\\local323/include -I../inst/include -I. -I'C:/Users/Cedric/AppData/Local/R/win-library/4.3/Rcpp/include' -I'C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include' -I'C:/Users/Cedric/AppData/Local/R/win-library/4.3/RcppGSL/include'   -I\\\"C:/RBuildTools/4.3/x86_64-w64-mingw32.static.posix/include\\\"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c RcppExports.cpp -o RcppExports.o\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"g++  -std=gnu++11 -I\\\"C:/PROGRA~1/R/R-43~1.3/include\\\" -DNDEBUG -I/include -IC:\\\\Users\\\\Cedric\\\\Documents\\\\R\\\\win-library\\\\4.0\\\\local323/include -I../inst/include -I. -I'C:/Users/Cedric/AppData/Local/R/win-library/4.3/Rcpp/include' -I'C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include' -I'C:/Users/Cedric/AppData/Local/R/win-library/4.3/RcppGSL/include'   -I\\\"C:/RBuildTools/4.3/x86_64-w64-mingw32.static.posix/include\\\"     -O2 -Wall  -mfpmath=sse -msse2 -mstackrealign  -c TumPurFuns.cpp -o TumPurFuns.o\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"In file included from C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/math/special_functions/detail/round_fwd.hpp:11,\\n\"},{\"type\":1,\"output\":\"                 from C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/math/special_functions/math_fwd.hpp:29,\\n\"},{\"type\":1,\"output\":\"                 from C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/math/special_functions/beta.hpp:13,\\n\"},{\"type\":1,\"output\":\"                 from TumPurFuns.cpp:5:\\n\"},{\"type\":1,\"output\":\"C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/math/tools/config.hpp:23:6: warning: #warning \\\"The minimum language standard to use Boost.Math will be C++14 starting in July 2023 (Boost 1.82 release)\\\" [-Wcpp]\\n\"},{\"type\":1,\"output\":\"   23 | #    warning \\\"The minimum language standard to use Boost.Math will be C++14 starting in July 2023 (Boost 1.82 release)\\\"\\n\"},{\"type\":1,\"output\":\"      |      ^~~~~~~\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"TumPurFuns.cpp: In function 'double logSums_MaxMethod_CPP(std::vector<double>)':\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:16:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"   16 |   for (int i = 0; i < logvec.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:27:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"   27 |   for (int i = 0; i < r.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:32:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"   32 |   for (int i = 0; i < H.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp: In function 'double logSums_MaxMethod_CPP_R(Rcpp::NumericVector)':\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:60:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"   60 |   for (int i = 0; i < r.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:65:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"   65 |   for (int i = 0; i < H.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp: In function 'double logSums_MaxMethodSigned_CPP(std::vector<double>, std::vector<int>)':\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:83:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"   83 |   for (int i = 0; i < logvec.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:96:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"   96 |   for (int i = 0; i < r.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:101:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  101 |   for (int i = 0; i < H.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp: In function 'double LogTrapezoidalInt_CPP(double, double, int, double, double, double, int, int, int, int)':\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:125:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  125 |   for (int i = 1; i < (Xs.size()-1); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:133:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  133 |   for (int i = 0; i < Ys.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:124:10: warning: unused variable 'filler' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\"  124 |   double filler = 0;\\n\"},{\"type\":1,\"output\":\"      |          ^~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp: In function 'double LogNewtonCotes_CPP(double, double, double, double, double, int, int, int, int, Rcpp::NumericVector)':\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:200:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  200 |   for (int i = 1; i < (Xs.size()-1); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:206:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  206 |   for (int i = 0; i < TWvec.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:219:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  219 |   for (int i = 0; i < Ys.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp: In function 'double LogGaussianQuad_CPP(double, double, double, double, double, int, int, int, int, Rcpp::NumericVector, Rcpp::NumericVector)':\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:257:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  257 |   for (int i = 0; i < (Xs.size()); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:262:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  262 |   for (int i = 0; i < Ys.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp: In function 'double LogTanhSinhQuad_CPP(double, double, int, double, double, double, int, int, int, int, double)':\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:306:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  306 |   for (int i = 0; i < Xs.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:320:23: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  320 |   for (int i2 = 0; i2 < Ys.size(); ++i2) {\\n\"},{\"type\":1,\"output\":\"      |                    ~~~^~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:342:27: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  342 |     for (int i_n = 0; i_n < Xs_new.size(); ++i_n) {\\n\"},{\"type\":1,\"output\":\"      |                       ~~~~^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:352:29: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  352 |     for (int i2_n = 0; i2_n < Ys_new.size(); ++i2_n) {\\n\"},{\"type\":1,\"output\":\"      |                        ~~~~~^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp: In function 'double TumPurHelpFun_CPP(std::vector<int>, int, std::vector<int>, double, double, double, std::vector<double>, int, std::__cxx11::basic_string<char>, double, Rcpp::NumericVector, Rcpp::NumericVector)':\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:388:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<int>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  388 |   for (int i = 0; i < TumReads_oi.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:396:25: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<int>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  396 |       for (int j = 0; j < RCcol.size(); ++j) {\\n\"},{\"type\":1,\"output\":\"      |                       ~~^~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:409:25: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<int>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  409 |       for (int j = 0; j < RCcol.size(); ++j) {\\n\"},{\"type\":1,\"output\":\"      |                       ~~^~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:422:25: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<int>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  422 |       for (int j = 0; j < RCcol.size(); ++j) {\\n\"},{\"type\":1,\"output\":\"      |                       ~~^~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:435:25: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<int>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  435 |       for (int j = 0; j < RCcol.size(); ++j) {\\n\"},{\"type\":1,\"output\":\"      |                       ~~^~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp: In function 'double TumPur_LogLik_CPP(Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, double, int, std::__cxx11::basic_string<char>, double, Rcpp::NumericVector, Rcpp::NumericVector)':\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:554:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  554 |   for (int i = 0; i < SampLiks.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:575:24: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<int>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  575 |     for (int i = 0 ; i != index.size() ; i++) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:598:25: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  598 |     for (int j2 = 0; j2 < SCP_oi_S.size(); ++j2) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp: In function 'double TumPur_LogLik_CPP2(Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, double, int, std::__cxx11::basic_string<char>, double, Rcpp::NumericVector, Rcpp::NumericVector)':\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:682:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  682 |   for (int i = 0; i < SampLiks.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:704:24: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<int>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  704 |     for (int i = 0 ; i != index.size() ; i++) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:727:25: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  727 |     for (int j2 = 0; j2 < SCP_oi_S.size(); ++j2) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp: In function 'double TumPur_LogLik_CPP2X(Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, double, int, std::__cxx11::basic_string<char>, double, Rcpp::NumericVector, Rcpp::NumericVector)':\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:765:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  765 |   for (int i = 0; i < SampLiks.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:787:24: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<int>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  787 |     for (int i = 0 ; i != index.size() ; i++) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:810:25: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  810 |     for (int j2 = 0; j2 < SCP_oi_S.size(); ++j2) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp: In function 'double TumPur_LogLik_CPP3(double, double, double, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, double, int, std::__cxx11::basic_string<char>, double, Rcpp::NumericVector, Rcpp::NumericVector)':\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:846:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  846 |   for (int i = 0; i < SampLiks.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:868:24: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<int>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  868 |     for (int i = 0 ; i != index.size() ; i++) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:891:25: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  891 |     for (int j2 = 0; j2 < SCP_oi_S.size(); ++j2) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp: In function 'double TumPur_LogLik_CPP3X(double, double, double, double, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, double, int, std::__cxx11::basic_string<char>, double, Rcpp::NumericVector, Rcpp::NumericVector)':\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:923:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  923 |   for (int i = 0; i < SampLiks.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:945:24: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<int>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  945 |     for (int i = 0 ; i != index.size() ; i++) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:968:25: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\"  968 |     for (int j2 = 0; j2 < SCP_oi_S.size(); ++j2) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp: In function 'double TumPur_LogLik_CPP4(double, double, double, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, double, int, std::__cxx11::basic_string<char>, double, Rcpp::NumericVector, Rcpp::NumericVector)':\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1002:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1002 |   for (int i = 0; i < SampLiks.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1024:24: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<int>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1024 |     for (int i = 0 ; i != index.size() ; i++) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1047:25: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1047 |     for (int j2 = 0; j2 < SCP_oi_S.size(); ++j2) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp: In function 'std::vector<double> TumPur_LogLik_CPP_DB1(Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, double, int, std::__cxx11::basic_string<char>, double, Rcpp::NumericVector, Rcpp::NumericVector)':\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1085:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1085 |   for (int i = 0; i < SampLiks.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1107:24: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<int>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1107 |     for (int i = 0 ; i != index.size() ; i++) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1130:25: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1130 |     for (int j2 = 0; j2 < SCP_oi_S.size(); ++j2) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp: In function 'std::__cxx11::list<std::vector<double> > TumPur_LogLik_CPP_DB2(Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, double, int, std::__cxx11::basic_string<char>, double, Rcpp::NumericVector, Rcpp::NumericVector)':\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1171:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1171 |   for (int i = 0; i < SampLiks.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1193:24: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<int>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1193 |     for (int i = 0 ; i != index.size() ; i++) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1216:25: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1216 |     for (int j2 = 0; j2 < SCP_oi_S.size(); ++j2) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp: In function 'std::__cxx11::list<std::vector<double> > TumPur_LogLik_CPP_DB3(Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, double, int, std::__cxx11::basic_string<char>, double, Rcpp::NumericVector, Rcpp::NumericVector)':\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1255:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1255 |   for (int i = 0; i < SampLiks.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1277:24: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<int>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1277 |     for (int i = 0 ; i != index.size() ; i++) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1300:25: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1300 |     for (int j2 = 0; j2 < SCP_oi_S.size(); ++j2) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp: In function 'double TumPur_LogLik_CPP2_10(Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, double, int, std::__cxx11::basic_string<char>, double, Rcpp::NumericVector, Rcpp::NumericVector)':\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1353:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1353 |   for (int i = 0; i < SampLiks.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1375:24: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<int>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1375 |     for (int i = 0 ; i != index.size() ; i++) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1398:25: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1398 |     for (int j2 = 0; j2 < SCP_oi_S.size(); ++j2) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp: In function 'double TumPur_LogLik_CPP2_100(Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, double, int, std::__cxx11::basic_string<char>, double, Rcpp::NumericVector, Rcpp::NumericVector)':\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1433:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1433 |   for (int i = 0; i < SampLiks.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1455:24: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<int>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1455 |     for (int i = 0 ; i != index.size() ; i++) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1478:25: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1478 |     for (int j2 = 0; j2 < SCP_oi_S.size(); ++j2) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp: In function 'double TumPur_LogLik_CPP2_1000(Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, double, int, std::__cxx11::basic_string<char>, double, Rcpp::NumericVector, Rcpp::NumericVector)':\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1513:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1513 |   for (int i = 0; i < SampLiks.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1535:24: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<int>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1535 |     for (int i = 0 ; i != index.size() ; i++) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1558:25: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1558 |     for (int j2 = 0; j2 < SCP_oi_S.size(); ++j2) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp: In function 'double TumPur_LogLik_CPP2Y(Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, Rcpp::NumericVector, double, int, std::__cxx11::basic_string<char>, double, Rcpp::NumericVector, Rcpp::NumericVector)':\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1596:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1596 |   for (int i = 0; i < SampLiks.size(); ++i) {\\n\"},{\"type\":1,\"output\":\"      |                   ~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1617:24: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<int>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1617 |     for (int i = 0 ; i != index.size() ; i++) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~^~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:1640:25: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<double>::size_type' {aka 'long long unsigned int'} [-Wsign-compare]\\n\"},{\"type\":1,\"output\":\" 1640 |     for (int j2 = 0; j2 < SCP_oi_S.size(); ++j2) {\\n\"},{\"type\":1,\"output\":\"      |                      ~~~^~~~~~~~~~~~~~~~~\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"In file included from C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/math/special_functions/beta.hpp:1721:\\n\"},{\"type\":1,\"output\":\"C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/math/special_functions/detail/ibeta_inverse.hpp: In instantiation of 'boost::math::detail::temme_root_finder<T>::temme_root_finder(T, T) [with T = long double]':\\n\"},{\"type\":1,\"output\":\"C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/math/special_functions/detail/ibeta_inverse.hpp:304:7:   required from 'T boost::math::detail::temme_method_2_ibeta_inverse(T, T, T, T, T, const Policy&) [with T = long double; Policy = boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>]'\\n\"},{\"type\":1,\"output\":\"C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/math/special_functions/detail/ibeta_inverse.hpp:615:48:   required from 'T boost::math::detail::ibeta_inv_imp(T, T, T, T, const Policy&, T*) [with T = long double; Policy = boost::math::policies::policy<boost::math::policies::promote_float<false>, boost::math::policies::promote_double<false>, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy, boost::math::policies::default_policy>]'\\n\"},{\"type\":1,\"output\":\"C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/math/special_functions/detail/ibeta_inverse.hpp:992:30:   required from 'boost::math::tools::promote_args_t<T1, T2, T3, T4> boost::math::ibeta_inv(T1, T2, T3, T4*, const Policy&) [with T1 = double; T2 = double; T3 = double; T4 = double; Policy = policies::policy<policies::default_policy, policies::default_policy, policies::default_policy, policies::default_policy, policies::default_policy, policies::default_policy, policies::default_policy, policies::default_policy, policies::default_policy, policies::default_policy, policies::default_policy>; tools::promote_args_t<T1, T2, T3, T4> = double]'\\n\"},{\"type\":1,\"output\":\"C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/math/special_functions/detail/ibeta_inverse.hpp:1015:20:   required from 'boost::math::tools::promote_args_t<RT1, RT2, A> boost::math::ibeta_inv(RT1, RT2, RT3) [with RT1 = double; RT2 = double; RT3 = double; tools::promote_args_t<RT1, RT2, A> = double]'\\n\"},{\"type\":1,\"output\":\"TumPurFuns.cpp:633:31:   required from here\\n\"},{\"type\":1,\"output\":\"C:/Users/Cedric/AppData/Local/R/win-library/4.3/BH/include/boost/math/special_functions/detail/ibeta_inverse.hpp:29:15: warning: unused variable 'x_extrema' [-Wunused-variable]\\n\"},{\"type\":1,\"output\":\"   29 |       const T x_extrema = 1 / (1 + a);\\n\"},{\"type\":1,\"output\":\"      |               ^~~~~~~~~\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"g++ -shared -s -static-libgcc -o maelstRom.dll tmp.def BetaBinomFuns.o OptTest.o OptTestX.o RcppExports.o TumPurFuns.o -L/lib -lmpfr -lgmp -LC:UsersCedricDocumentsRwin-library4.0local323/lib -lgsl -lgslcblas -LC:/RBuildTools/4.3/x86_64-w64-mingw32.static.posix/lib/x64 -LC:/RBuildTools/4.3/x86_64-w64-mingw32.static.posix/lib -LC:/PROGRA~1/R/R-43~1.3/bin/x64 -lR\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"installing to C:/Users/Cedric/AppData/Local/R/win-library/4.3/00LOCK-maelstRom/00new/maelstRom/libs/x64\\r\\n\"},{\"type\":1,\"output\":\"** R\\r\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** data\\r\\n\"},{\"type\":1,\"output\":\"*** moving datasets to lazyload DB\\r\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":2,\"output\":\"Warning: replacing previous import 'data.table::yearmon' by 'zoo::yearmon' when loading 'maelstRom'\\r\\n\"},{\"type\":2,\"output\":\"Warning: replacing previous import 'data.table::yearqtr' by 'zoo::yearqtr' when loading 'maelstRom'\\r\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":2,\"output\":\"Warning: objects '.Random.seed', 'CaseCountsToy', 'ControlCountsToy' are created by more than one data call\\r\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** inst\\r\\n\"},{\"type\":1,\"output\":\"** byte-compile and prepare package for lazy loading\\r\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":2,\"output\":\"Warning: replacing previous import 'data.table::yearmon' by 'zoo::yearmon' when loading 'maelstRom'\\r\\n\"},{\"type\":2,\"output\":\"Warning: replacing previous import 'data.table::yearqtr' by 'zoo::yearqtr' when loading 'maelstRom'\\r\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** help\\r\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"*** installing help indices\\r\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"*** copying figures\\r\\n\"},{\"type\":1,\"output\":\"** building package indices\\r\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** installing vignettes\\r\\n\"},{\"type\":1,\"output\":\"** testing if installed package can be loaded from temporary location\\r\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":2,\"output\":\"Warning: replacing previous import 'data.table::yearmon' by 'zoo::yearmon' when loading 'maelstRom'\\r\\n\"},{\"type\":2,\"output\":\"Warning: replacing previous import 'data.table::yearqtr' by 'zoo::yearqtr' when loading 'maelstRom'\\r\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** testing if installed package can be loaded from final location\\r\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":2,\"output\":\"Warning: replacing previous import 'data.table::yearmon' by 'zoo::yearmon' when loading 'maelstRom'\\r\\n\"},{\"type\":2,\"output\":\"Warning: replacing previous import 'data.table::yearqtr' by 'zoo::yearqtr' when loading 'maelstRom'\\r\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** testing if installed package keeps a record of temporary installation path\\r\\n\"},{\"type\":1,\"output\":\"* DONE (maelstRom)\\r\\n\"},{\"type\":1,\"output\":\"\"}]"
compile_pdf_state="{\"tab_visible\":false,\"running\":false,\"target_file\":\"\",\"output\":\"\",\"errors\":[]}"
environmentMonitoring="1"
files.monitored-path=""
find-in-files-state="{\"handle\":\"\",\"input\":\"\",\"path\":\"\",\"regex\":false,\"ignoreCase\":false,\"results\":{\"file\":[],\"line\":[],\"lineValue\":[],\"matchOn\":[],\"matchOff\":[],\"replaceMatchOn\":[],\"replaceMatchOff\":[]},\"running\":false,\"replace\":false,\"preview\":false,\"gitFlag\":false,\"replacePattern\":\"\"}"
imageDirtyState="1"
saveActionState="-1"
