% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grad_pi.R
\name{grad_pi}
\alias{grad_pi}
\title{gradient of the beta-binomial log-likelihood function with respect to the pi-parameter}
\usage{
grad_pi(ms, ns, pi, theta, Xtra = 7, MemLim = 2048)
}
\arguments{
\item{ms}{Numeric vector. Vector of number of successes}

\item{ns}{Numeric vector. Vector of number of trials}

\item{pi}{Number. Probability of success; \code{0 >= pi >= 1}}

\item{theta}{Number. Dispersion parameter; \code{0 >= theta > +Inf}}

\item{Xtra}{Integer. An internal control parameter, determines the number of decimal places that are to be
stored correctly in memory during calculation of the gradient, upon which the number of
bits to be used per number depends. It's not recommended to change this from the default.}

\item{MemLim}{Integer. The memory limit, in bits, of numbers used during the calculation of the gradient.
For extreme data/parameter values, it may be necesssary to go beyond R's \code{double} memory, i.e. 53 bits,
in order to get correct results. However, this argument prevents boundless memory usage.
In case this limit is reached, \code{grad_pi} falls back on an implementation assuming a theta-parameter of zero,
as this should only happen for extremely close-to-zero theta-values anyway.
A warning message is generated if this occurs.}
}
\value{
A vector of values of the gradient, with the same length as \code{ms} and \code{ns}.
}
\description{
\code{grad_pi} calculates the value of the gradient of the beta-binomial log-likelihood function with respect to pi at given observations & parameters.
The function makes use of different implementations of this gradient,
aiming to produce correct results even on extreme data, and this in a speedy fashion
}
